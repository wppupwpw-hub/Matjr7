# -*- coding: utf-8 -*-
import json
import random

# يمكنك تغيير هذا الرقم إلى أي عدد تريده
NUM_RESPONSES = 50000

# قوائم البيانات الأساسية لتوليد محتوى متنوع ومفيد
COUNTRIES_CAPITALS = {
    # الشرق الأوسط وشمال أفريقيا
    "مصر": "القاهرة", "السعودية": "الرياض", "الإمارات": "أبو ظبي", "الكويت": "الكويت", "قطر": "الدوحة", "البحرين": "المنامة",
    "عمان": "مسقط", "الأردن": "عمان", "لبنان": "بيروت", "سوريا": "دمشق", "العراق": "بغداد", "فلسطين": "القدس",
    "المغرب": "الرباط", "الجزائر": "الجزائر", "تونس": "تونس", "ليبيا": "طرابلس", "السودان": "الخرطوم", "اليمن": "صنعاء",
    
    # أوروبا
    "فرنسا": "باريس", "ألمانيا": "برلين", "إيطاليا": "روما", "إسبانيا": "مدريد", "البرتغال": "لشبونة", "إنجلترا": "لندن",
    "روسيا": "موسكو", "تركيا": "أنقرة", "هولندا": "أمستردام", "بلجيكا": "بروكسل", "سويسرا": "برن", "النمسا": "فيينا",
    
    # آسيا
    "اليابان": "طوكيو", "الصين": "بكين", "الهند": "نيودلهي", "كوريا الجنوبية": "سيؤول", "تايلاند": "بانكوك", "فيتنام": "هانوي",
    "إندونيسيا": "جاكرتا", "ماليزيا": "كوالالمبور", "الفلبين": "مانيلا",
    
    # الأمريكتين
    "أمريكا": "واشنطن", "كندا": "أوتاوا", "البرازيل": "برازيليا", "الأرجنتين": "بوينس آيرس", "المكسيك": "مكسيكو سيتي",
    
    # أفريقيا وأوقيانوسيا
    "جنوب أفريقيا": "كيب تاون", "نيجيريا": "أبوجا", "كينيا": "نيروبي", "أستراليا": "كانبرا", "نيوزيلندا": "ويلينغتون"
}

INVENTIONS_INVENTORS = {
    "الهاتف": "ألكسندر جراهام بيل", "الكهرباء": "توماس أديسون", "الطائرة": "الأخوان رايت", "السيارة": "كارل بنز",
    "الحاسوب": "تشارلز باباج", "الإنترنت": "تيم بيرنرز لي", "التلفزيون": "جون لوجي بيرد", "الراديو": "جوليلمو ماركوني",
    "اللمبة الكهربائية": "توماس أديسون", "المطبعة": "يوهانس جوتنبرغ", "المحرك البخاري": "جيمس واط", "البنسلين": "ألكسندر فليمنغ",
    "اللقاحات": "إدوارد جينر", "النظارات": "سلفينو أرماتي", "الكاميرا": "جوزيف نيسيفور نيبس", "المايكرويف": "بيرسي سبنسر"
}

SCIENTIFIC_CONCEPTS = {
    "الجاذبية": "قوة الجذب بين الأجسام التي لها كتلة، وهي المسؤولة عن حركة الكواكب والأقمار",
    "الذكاء الاصطناعي": "تقنية تمكن الحاسوب من محاكاة التفكير البشري وحل المشاكل المعقدة",
    "الإنترنت": "شبكة عالمية تربط مليارات الأجهزة حول العالم لتبادل المعلومات والبيانات",
    "البرمجة": "عملية كتابة تعليمات للحاسوب بلغة يفهمها لتنفيذ مهام ووظائف محددة",
    "البلوك تشين": "تقنية لحفظ البيانات بطريقة آمنة وموزعة لا يمكن تعديلها أو التلاعب بها",
    "الطاقة المتجددة": "الطاقة المستمدة من مصادر طبيعية متجددة مثل الشمس والرياح والماء",
    "الحمض النووي": "المادة الوراثية التي تحمل المعلومات الجينية لجميع الكائنات الحية",
    "الضوء": "شكل من أشكال الطاقة الكهرومغناطيسية المرئية للعين البشرية",
    "الصوت": "موجات اهتزازية تنتقل عبر الهواء أو المواد الأخرى وتصل إلى الأذن"
}

SPORTS_WINNERS = {
    "كأس العالم 2022": "الأرجنتين", "كأس العالم 2018": "فرنسا", "كأس العالم 2014": "ألمانيا", "كأس العالم 2010": "إسبانيا",
    "بطولة أوروبا 2021": "إيطاليا", "كوبا أمريكا 2021": "الأرجنتين", "دوري أبطال أوروبا 2023": "مانشستر سيتي",
    "الدوري الإنجليزي 2023": "مانشستر سيتي", "أولمبياد طوكيو 2021": "الولايات المتحدة", "كأس الأمم الأفريقية 2021": "السنغال"
}

WORLD_RECORDS = {
    "أطول نهر في العالم": "نهر النيل", "أكبر محيط في العالم": "المحيط الهادئ", "أعلى قمة في العالم": "جبل إيفرست",
    "أكبر صحراء في العالم": "الصحراء الكبرى", "أعمق نقطة في المحيطات": "خندق ماريانا",
    "أكبر دولة في العالم": "روسيا", "أصغر دولة في العالم": "الفاتيكان", "أكثر دولة سكاناً": "الصين"
}

FAMOUS_PEOPLE = {
    "محمد صلاح": "لاعب كرة قدم مصري", "ليونيل ميسي": "لاعب أرجنتيني", "كريستيانو رونالدو": "لاعب برتغالي",
    "ألبرت أينشتاين": "عالم فيزياء ألماني", "إسحاق نيوتن": "عالم إنجليزي", "محمد علي كلاي": "ملاكم أمريكي",
    "مارك زوكربيرغ": "مؤسس فيسبوك", "ستيف جوبز": "مؤسس شركة أبل"
}

COLORS_MEANINGS = {
    "الأحمر": "لون الطاقة والحب", "الأزرق": "لون الهدوء والثقة", "الأخضر": "لون الطبيعة والنمو",
    "الأصفر": "لون السعادة والتفاؤل", "البرتقالي": "لون الحماس والإبداع", "البنفسجي": "لون الروحانية والغموض",
    "الأسود": "لون الأناقة والقوة", "الأبيض": "لون النقاء والصفاء"
}

ANIMALS_INFO = {
    "الأسد": "ملك الغابة وأحد أقوى الحيوانات المفترسة", "الفيل": "أكبر الثدييات البرية",
    "الدولفين": "من أذكى الحيوانات البحرية", "النمر": "أسرع الحيوانات البرية",
    "الحوت الأزرق": "أكبر حيوان في العالم", "النحلة": "حشرة مهمة للبيئة"
}

# Question and answer templates
QUESTION_TEMPLATES = {
    "capitals": ["ما هي عاصمة {}؟", "ما عاصمة {}؟"],
    "inventors": ["من هو مخترع {}؟", "من اخترع {}؟"],
    "definitions": ["ما هو {}؟", "عرف {}؟"],
    "sports": ["من فاز بـ{}؟", "من حصل على {}؟"],
    "records": ["ما هو {}؟", "أين يقع {}؟"],
    "people": ["من هو {}؟", "اذكر معلومات عن {}"],
    "colors": ["ماذا يرمز اللون {}؟", "ما معنى اللون {}؟"],
    "animals": ["ما هو {}؟", "اذكر معلومات عن {}"]
}

GENERAL_QA = [
    {"question": "كم عدد أيام السنة؟", "answer": "السنة العادية 365 يوماً، والكبيسة 366 يوماً", "category": "general"},
    {"question": "كم عدد قارات العالم؟", "answer": "7 قارات: آسيا، أفريقيا، أوروبا، أمريكا الشمالية، أمريكا الجنوبية، أستراليا، والقطب الجنوبي", "category": "general"},
]

def generate_responses_data(num):
    data = []
    data.extend(GENERAL_QA)

    categories = [
        ("capitals", COUNTRIES_CAPITALS),
        ("inventors", INVENTIONS_INVENTORS),
        ("definitions", SCIENTIFIC_CONCEPTS),
        ("sports", SPORTS_WINNERS),
        ("records", WORLD_RECORDS),
        ("people", FAMOUS_PEOPLE),
        ("colors", COLORS_MEANINGS),
        ("animals", ANIMALS_INFO)
    ]
    
    # Calculate how many questions per category to generate
    questions_per_category = (num - len(data)) // len(categories)
    
    for category, data_dict in categories:
        templates = QUESTION_TEMPLATES[category]
        items = list(data_dict.items())
        
        for _ in range(questions_per_category):
            key, value = random.choice(items)
            template = random.choice(templates)
            question = template.format(key)
            answer = value
            data.append({"question": question, "answer": answer, "category": category})
            
    # Add random questions to fill the rest of the count
    while len(data) < num:
        category, data_dict = random.choice(categories)
        templates = QUESTION_TEMPLATES[category]
        key, value = random.choice(list(data_dict.items()))
        template = random.choice(templates)
        question = template.format(key)
        answer = value
        data.append({"question": question, "answer": answer, "category": category})
    
    random.shuffle(data)
    return data[:num]

def save_to_json(data, filename):
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        
        print(f"✅ File '{filename}' successfully created!")
        print(f"📊 Total Q&A pairs: {len(data):,}")
        
    except Exception as e:
        print(f"❌ An error occurred while saving the file: {e}")

if __name__ == "__main__":
    print("🚀 Advanced Q&A Database Generator")
    print("=" * 50)
    
    print(f"⏳ Generating {NUM_RESPONSES:,} diverse Q&A pairs...")
    print("⚠️ This might take a few minutes...")
    
    all_responses = generate_responses_data(NUM_RESPONSES)
    save_to_json(all_responses, "responses.json")
    
    print(f"\n🎉 Process finished successfully!")
    print(f"📁 The file 'responses.json' is now ready.")
