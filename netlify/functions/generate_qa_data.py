import json
import random

# يمكنك تغيير هذا الرقم إلى أي عدد تريده
NUM_RESPONSES = 50000

# قوائم البيانات الأساسية لتوليد محتوى متنوع ومفيد
COUNTRIES_CAPITALS = {
    # الشرق الأوسط وشمال أفريقيا
    "مصر": "القاهرة", "السعودية": "الرياض", "الإمارات": "أبو ظبي",
    "الكويت": "الكويت", "قطر": "الدوحة", "البحرين": "المنامة",
    "عمان": "مسقط", "الأردن": "عمان", "لبنان": "بيروت",
    "سوريا": "دمشق", "العراق": "بغداد", "فلسطين": "القدس",
    "المغرب": "الرباط", "الجزائر": "الجزائر", "تونس": "تونس",
    "ليبيا": "طرابلس", "السودان": "الخرطوم", "اليمن": "صنعاء",
    
    # أوروبا
    "فرنسا": "باريس", "ألمانيا": "برلين", "إيطاليا": "روما",
    "إسبانيا": "مدريد", "البرتغال": "لشبونة", "إنجلترا": "لندن",
    "روسيا": "موسكو", "تركيا": "أنقرة", "هولندا": "أمستردام",
    "بلجيكا": "بروكسل", "سويسرا": "برن", "النمسا": "فيينا",
    
    # آسيا
    "اليابان": "طوكيو", "الصين": "بكين", "الهند": "نيودلهي",
    "كوريا الجنوبية": "سيؤول", "تايلاند": "بانكوك", "فيتنام": "هانوي",
    "إندونيسيا": "جاكرتا", "ماليزيا": "كوالالمبور", "الفلبين": "مانيلا",
    
    # الأمريكتين
    "أمريكا": "واشنطن", "كندا": "أوتاوا", "البرازيل": "برازيليا",
    "الأرجنتين": "بوينس آيرس", "المكسيك": "مكسيكو سيتي",
    
    # أفريقيا وأوقيانوسيا
    "جنوب أفريقيا": "كيب تاون", "نيجيريا": "أبوجا", "كينيا": "نيروبي",
    "أستراليا": "كانبرا", "نيوزيلندا": "ويلينغتون"
}

INVENTIONS_INVENTORS = {
    "الهاتف": "ألكسندر جراهام بيل", "الكهرباء": "توماس أديسون",
    "الطائرة": "الأخوان رايت", "السيارة": "كارل بنز",
    "الحاسوب": "تشارلز باباج", "الإنترنت": "تيم بيرنرز لي",
    "التلفزيون": "جون لوجي بيرد", "الراديو": "جوليلمو ماركوني",
    "اللمبة الكهربائية": "توماس أديسون", "المطبعة": "يوهانس جوتنبرغ",
    "المحرك البخاري": "جيمس واط", "البنسلين": "ألكسندر فليمنغ",
    "اللقاحات": "إدوارد جينر", "النظارات": "سلفينو أرماتي",
    "الكاميرا": "جوزيف نيسيفور نيبس", "المايكرويف": "بيرسي سبنسر"
}

SCIENTIFIC_CONCEPTS = {
    "الجاذبية": "قوة الجذب بين الأجسام التي لها كتلة، وهي المسؤولة عن حركة الكواكب والأقمار",
    "الذكاء الاصطناعي": "تقنية تمكن الحاسوب من محاكاة التفكير البشري وحل المشاكل المعقدة",
    "الإنترنت": "شبكة عالمية تربط مليارات الأجهزة حول العالم لتبادل المعلومات والبيانات",
    "البرمجة": "عملية كتابة تعليمات للحاسوب بلغة يفهمها لتنفيذ مهام ووظائف محددة",
    "البلوك تشين": "تقنية لحفظ البيانات بطريقة آمنة وموزعة لا يمكن تعديلها أو التلاعب بها",
    "الطاقة المتجددة": "الطاقة المستمدة من مصادر طبيعية متجددة مثل الشمس والرياح والماء",
    "الحمض النووي": "المادة الوراثية التي تحمل المعلومات الجينية لجميع الكائنات الحية",
    "الضوء": "شكل من أشكال الطاقة الكهرومغناطيسية المرئية للعين البشرية",
    "الصوت": "موجات اهتزازية تنتقل عبر الهواء أو المواد الأخرى وتصل إلى الأذن"
}

SPORTS_WINNERS = {
    "كأس العالم 2022": "الأرجنتين", "كأس العالم 2018": "فرنسا",
    "كأس العالم 2014": "ألمانيا", "كأس العالم 2010": "إسبانيا",
    "بطولة أوروبا 2021": "إيطاليا", "كوبا أمريكا 2021": "الأرجنتين",
    "دوري أبطال أوروبا 2023": "مانشستر سيتي", "الدوري الإنجليزي 2023": "مانشستر سيتي",
    "أولمبياد طوكيو 2021": "الولايات المتحدة", "كأس الأمم الأفريقية 2021": "السنغال"
}

WORLD_RECORDS = {
    "أطول نهر في العالم": "نهر النيل بطول 6650 كيلومتر",
    "أكبر محيط في العالم": "المحيط الهادئ",
    "أعلى قمة في العالم": "جبل إيفرست بارتفاع 8848 متر",
    "أكبر صحراء في العالم": "الصحراء الكبرى في أفريقيا",
    "أعمق نقطة في المحيطات": "خندق ماريانا في المحيط الهادئ",
    "أكبر دولة في العالم": "روسيا بمساحة 17.1 مليون كيلومتر مربع",
    "أصغر دولة في العالم": "الفاتيكان بمساحة 0.17 ميل مربع",
    "أكثر دولة سكاناً": "الصين بأكثر من 1.4 مليار نسمة"
}

FAMOUS_PEOPLE = {
    "محمد صلاح": "لاعب كرة قدم مصري يلعب في ليفربول، من أفضل اللاعبين في العالم",
    "ليونيل ميسي": "لاعب أرجنتيني، فاز بكأس العالم 2022 ويعتبر من أعظم اللاعبين",
    "كريستيانو رونالدو": "لاعب برتغالي، من أعظم لاعبي كرة القدم في التاريخ",
    "ألبرت أينشتاين": "عالم فيزياء ألماني وضع نظرية النسبية وغير فهمنا للكون",
    "إسحاق نيوتن": "عالم إنجليزي وضع قوانين الحركة والجاذبية الأساسية",
    "محمد علي كلاي": "أعظم ملاكم في التاريخ، معروف بقوته وشخصيته الكاريزمية",
    "مارك زوكربيرغ": "مؤسس فيسبوك وواحد من أهم رواد التكنولوجيا",
    "ستيف جوبز": "مؤسس شركة أبل وأحد رواد ثورة الحاسوب الشخصي"
}

COLORS_MEANINGS = {
    "الأحمر": "لون الطاقة والحيوية والحب والشغف",
    "الأزرق": "لون الهدوء والثقة والاستقرار والسلام",
    "الأخضر": "لون الطبيعة والنمو والتوازن والهدوء",
    "الأصفر": "لون السعادة والتفاؤل والطاقة الإيجابية",
    "البرتقالي": "لون الحماس والإبداع والدفء",
    "البنفسجي": "لون الروحانية والإبداع والغموض",
    "الأسود": "لون الأناقة والقوة والغموض",
    "الأبيض": "لون النقاء والصفاء والبساطة"
}

ANIMALS_INFO = {
    "الأسد": "ملك الغابة، من أقوى الحيوانات المفترسة ويعيش في مجموعات",
    "الفيل": "أكبر الثدييات البرية، يتميز بذكائه وذاكرته القوية",
    "الدولفين": "من أذكى الحيوانات البحرية، يتواصل بالأصوات المعقدة",
    "النمر": "أسرع الحيوانات البرية، يمكنه الوصول لسرعة 120 كم/ساعة",
    "الحوت الأزرق": "أكبر حيوان في العالم، يمكن أن يصل طوله إلى 30 متراً",
    "النحلة": "حشرة مهمة للبيئة، تنتج العسل وتلقح النباتات",
    "القرش": "سمك مفترس قديم، موجود منذ 400 مليون سنة",
    "البطريق": "طائر لا يطير لكنه سباح ماهر في المياه الباردة"
}

# قوالب الأسئلة والأجوبة
QUESTION_TEMPLATES = {
    "capitals": [
        "ما هي عاصمة {}؟",
        "ما عاصمة {}؟",
        "عاصمة {} هي؟",
        "أين تقع عاصمة {}؟"
    ],
    "inventors": [
        "من هو مخترع {}؟",
        "من اخترع {}؟",
        "من قام باختراع {}؟",
        "من يعتبر مخترع {}؟"
    ],
    "definitions": [
        "ما هو {}؟",
        "عرف {}؟",
        "اشرح مفهوم {}",
        "ما المقصود بـ{}؟"
    ],
    "sports": [
        "من فاز بـ{}؟",
        "من حصل على {}؟",
        "من الفائز بـ{}؟",
        "من نال {}؟"
    ],
    "records": [
        "ما هو {}؟",
        "أين يقع {}؟",
        "كم يبلغ {}؟",
        "ما هي {}؟"
    ],
    "people": [
        "من هو {}؟",
        "عرفني بـ{}",
        "اذكر معلومات عن {}",
        "ماذا تعرف عن {}؟"
    ],
    "colors": [
        "ماذا يرمز اللون {}؟",
        "ما معنى اللون {}؟",
        "ما دلالة اللون {}؟",
        "اللون {} يعني؟"
    ],
    "animals": [
        "ما هو {}؟",
        "عرفني بحيوان {}",
        "اذكر معلومات عن {}",
        "ماذا تعرف عن {}؟"
    ]
}

GENERAL_QA = [
    {
        "question": "كم عدد أيام السنة؟",
        "answer": "السنة العادية 365 يوماً، والسنة الكبيسة 366 يوماً"
    },
    {
        "question": "كم عدد قارات العالم؟",
        "answer": "عدد قارات العالم 7 قارات: آسيا، أفريقيا، أوروبا، أمريكا الشمالية، أمريكا الجنوبية، أستراليا، والقطب الجنوبي"
    },
    {
        "question": "ما هي أكبر قارة في العالم؟",
        "answer": "آسيا هي أكبر قارة في العالم من حيث المساحة وعدد السكان"
    },
    {
        "question": "كم عدد المحيطات في العالم؟",
        "answer": "عدد المحيطات في العالم 5: الهادئ، الأطلسي، الهندي، المتجمد الشمالي، والمتجمد الجنوبي"
    },
    {
        "question": "ما هي أكبر دولة عربية؟",
        "answer": "الجزائر هي أكبر دولة عربية من حيث المساحة"
    },
    {
        "question": "كم عدد عضلات جسم الإنسان؟",
        "answer": "جسم الإنسان يحتوي على حوالي 600 عضلة"
    },
    {
        "question": "ما هي أسرع الحيوانات؟",
        "answer": "النمر هو أسرع الحيوانات البرية بسرعة تصل إلى 120 كم/ساعة"
    },
    {
        "question": "كم عدد عظام جسم الإنسان؟",
        "answer": "جسم الإنسان البالغ يحتوي على 206 عظمة"
    }
]

GREETINGS_QA = [
    {
        "question": "مرحبا",
        "answer": "مرحباً بك! 😊 كيف يمكنني مساعدتك اليوم؟"
    },
    {
        "question": "السلام عليكم",
        "answer": "وعليكم السلام ورحمة الله وبركاته 🕊️ أهلاً وسهلاً بك"
    },
    {
        "question": "صباح الخير",
        "answer": "صباح الخير! نتمنى لك يوماً سعيداً ومليئاً بالإنجازات ☀️"
    },
    {
        "question": "مساء الخير",
        "answer": "مساء الخير! كيف كان يومك؟ 🌅"
    },
    {
        "question": "كيف حالك",
        "answer": "بخير والحمد لله! شكراً لسؤالك، كيف حالك أنت؟ 😊"
    },
    {
        "question": "شكرا",
        "answer": "عفواً! دائماً في الخدمة 🙏 هل تحتاج مساعدة أخرى؟"
    }
]

def generate_responses_data(num):
    """
    توليد قائمة متنوعة وشاملة من الأسئلة والأجوبة.
    """
    data = []
    
    # إضافة التحيات والردود الأساسية
    data.extend(GREETINGS_QA)
    data.extend(GENERAL_QA)
    
    # حساب العدد المتبقي
    remaining = num - len(data)
    
    # توزيع الأسئلة على الفئات المختلفة
    categories = [
        ("capitals", COUNTRIES_CAPITALS),
        ("inventors", INVENTIONS_INVENTORS), 
        ("definitions", SCIENTIFIC_CONCEPTS),
        ("sports", SPORTS_WINNERS),
        ("records", WORLD_RECORDS),
        ("people", FAMOUS_PEOPLE),
        ("colors", COLORS_MEANINGS),
        ("animals", ANIMALS_INFO)
    ]
    
    questions_per_category = remaining // len(categories)
    
    for category, data_dict in categories:
        templates = QUESTION_TEMPLATES[category]
        items = list(data_dict.items())
        
        for i in range(questions_per_category):
            # اختيار عنصر وقالب بشكل عشوائي
            key, value = random.choice(items)
            template = random.choice(templates)
            
            question = template.format(key)
            
            # تخصيص الإجابات حسب النوع
            if category == "capitals":
                answer = f"عاصمة {key} هي {value} 🏛️"
            elif category == "inventors":
                answer = f"مخترع {key} هو {value} 🔬"
            elif category == "definitions":
                answer = f"{key}: {value} 🧠"
            elif category == "sports":
                answer = f"الفائز بـ{key} هو {value} 🏆"
            elif category == "records":
                answer = f"{key} هو {value} 🌍"
            elif category == "people":
                answer = f"{key}: {value} 👨‍💼"
            elif category == "colors":
                answer = f"اللون {key}: {value} 🎨"
            elif category == "animals":
                answer = f"{key}: {value} 🐾"
            
            data.append({
                "question": question,
                "answer": answer,
                "category": category
            })
    
    # إضافة أسئلة عشوائية إضافية لاستكمال العدد
    while len(data) < num:
        category, data_dict = random.choice(categories)
        templates = QUESTION_TEMPLATES[category]
        key, value = random.choice(list(data_dict.items()))
        template = random.choice(templates)
        
        question = template.format(key)
        answer = f"الإجابة: {value}"
        
        data.append({
            "question": question,
            "answer": answer,
            "category": category
        })
    
    # خلط البيانات للحصول على توزيع عشوائي
    random.shuffle(data)
    
    return data[:num]

def save_to_json(data, filename):
    """
    حفظ البيانات في ملف JSON مع إحصائيات مفصلة.
    """
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
        
        # حساب إحصائيات الفئات
        categories_count = {}
        for item in data:
            category = item.get('category', 'general')
            categories_count[category] = categories_count.get(category, 0) + 1
        
        print(f"✅ تم إنشاء الملف '{filename}' بنجاح!")
        print(f"📊 إجمالي الأسئلة والأجوبة: {len(data)}")
        print("\n📋 توزيع الفئات:")
        for category, count in categories_count.items():
            percentage = (count / len(data)) * 100
            print(f"   • {category}: {count} سؤال ({percentage:.1f}%)")
        
        # حفظ نسخة مبسطة للبوت
        simplified_data = {}
        for item in data:
            simplified_data[item['question'].lower().strip()] = item['answer']
        
        with open('responses_simple.json', 'w', encoding='utf-8') as f:
            json.dump(simplified_data, f, ensure_ascii=False, indent=2)
        
        print(f"\n✅ تم إنشاء ملف مبسط للبوت: 'responses_simple.json'")
        
    except Exception as e:
        print(f"❌ حدث خطأ عند حفظ الملف: {e}")

def create_sample_dataset():
    """
    إنشاء نموذج صغير للاختبار (1000 سؤال).
    """
    print("📝 إنشاء نموذج صغير للاختبار...")
    sample_data = generate_responses_data(1000)
    save_to_json(sample_data, "responses_sample.json")

if __name__ == "__main__":
    print("🚀 مولد قاعدة بيانات الأسئلة والأجوبة المتقدم")
    print("=" * 50)
    
    choice = input("اختر نوع البيانات:\n1. نموذج صغير (1000 سؤال)\n2. قاعدة بيانات كاملة (50000 سؤال)\nاختيارك (1 أو 2): ")
    
    if choice == "1":
        create_sample_dataset()
    elif choice == "2":
        print(f"⏳ جاري توليد {NUM_RESPONSES:,} سؤال وجواب متنوع...")
        print("⚠️ قد تستغرق هذه العملية بضع دقائق...")
        
        all_responses = generate_responses_data(NUM_RESPONSES)
        save_to_json(all_responses, "responses.json")
        
        print(f"\n🎉 تم إنتهاء العملية بنجاح!")
        print("📁 الملفات المُنشأة:")
        print("   • responses.json - قاعدة البيانات الكاملة")
        print("   • responses_simple.json - نسخة مبسطة للبوت")
    else:
        print("❌ اختيار غير صحيح!")
