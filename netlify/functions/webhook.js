// netlify/functions/enhanced-webhook.js

/**
 * ุฏุงูุฉ ุงูููุจ ููู ุงูุฑุฆูุณูุฉ - ุงููุณุฎุฉ ุงููุญุฏุซุฉ
 */
export async function handler(event, context) {
  const VERIFY_TOKEN = process.env.VERIFY_TOKEN;
  const PAGE_ACCESS_TOKEN = process.env.PAGE_ACCESS_TOKEN;

  // ุงูุชุญูู ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
  if (!VERIFY_TOKEN || !PAGE_ACCESS_TOKEN) {
    return {
      statusCode: 500,
      body: JSON.stringify({ error: "Missing environment variables" })
    };
  }

  try {
    // ุงูุชุญูู ูู ููุณุจูู (GET)
    if (event.httpMethod === "GET") {
      const params = event.queryStringParameters || {};
      
      if (params["hub.verify_token"] === VERIFY_TOKEN && params["hub.challenge"]) {
        console.log("โ ุชู ุงูุชุญูู ูู ุงูููุจ ููู ุจูุฌุงุญ");
        return {
          statusCode: 200,
          body: params["hub.challenge"],
        };
      }
      
      return { 
        statusCode: 403, 
        body: "Forbidden - Invalid verify token" 
      };
    }

    // ุงูุชุนุงูู ูุน ุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ (POST)
    if (event.httpMethod === "POST") {
      if (!event.body) {
        return { statusCode: 400, body: "No body provided" };
      }

      let body;
      try {
        body = JSON.parse(event.body);
      } catch (parseError) {
        console.error("โ ุฎุทุฃ ูู ุชุญููู JSON:", parseError);
        return { statusCode: 400, body: "Invalid JSON" };
      }

      if (body.object === "page" && body.entry) {
        await processWebhookEvents(body.entry, PAGE_ACCESS_TOKEN);
        return { statusCode: 200, body: "EVENT_RECEIVED" };
      }
      
      return { statusCode: 404, body: "Not Found" };
    }

    return { statusCode: 405, body: "Method Not Allowed" };

  } catch (error) {
    console.error("โ ุฎุทุฃ ุนุงู ูู ุงูููุจ ููู:", error);
    return {
      statusCode: 500,
      body: JSON.stringify({ error: "Internal server error" })
    };
  }
}

/**
 * ูุนุงูุฌุฉ ุฃุญุฏุงุซ ุงูููุจ ููู
 */
async function processWebhookEvents(entries, pageAccessToken) {
  for (const entry of entries) {
    if (entry.messaging) {
      for (const webhookEvent of entry.messaging) {
        await handleMessagingEvent(webhookEvent, pageAccessToken);
      }
    }
  }
}

/**
 * ุงูุชุนุงูู ูุน ุญุฏุซ ุฑุณุงูุฉ ูุงุญุฏ
 */
async function handleMessagingEvent(webhookEvent, pageAccessToken) {
  const senderId = webhookEvent.sender?.id;
  
  if (!senderId) {
    console.error("โ ูุง ููุฌุฏ ูุนุฑู ูุฑุณู");
    return;
  }

  try {
    // ูุนุงูุฌุฉ ุงูุฑุณุงุฆู ุงููุตูุฉ
    if (webhookEvent.message?.text) {
      const userMsg = webhookEvent.message.text.trim();
      console.log("๐ฉ ุฑุณุงูุฉ ุงููุณุชุฎุฏู:", userMsg);
      
      const botResponse = await generateResponse(userMsg);
      await sendMessage(senderId, botResponse, pageAccessToken);
    }
    
    // ูุนุงูุฌุฉ postback ููุจุฏุงูุฉ
    else if (webhookEvent.postback?.payload === "GET_STARTED_PAYLOAD") {
      const welcomeText = "ูุฑุญุจุงู ุจู! ุฃูุง ูุณุงุนุฏู ุงูุฐูู. ุงุณุฃููู ุนู ุฃู ุดูุก.";
      await sendMessage(senderId, welcomeText, pageAccessToken);
    }
    
  } catch (error) {
    console.error("โ ุฎุทุฃ ูู ูุนุงูุฌุฉ ุงูุญุฏุซ:", error);
    await sendMessage(senderId, "ุนุฐุฑุงูุ ุญุฏุซ ุฎุทุฃ. ุญุงูู ูุฑุฉ ุฃุฎุฑู.", pageAccessToken);
  }
}

/**
 * ุฅุฑุณุงู ุฑุณุงูุฉ ุฅูู ุงููุณุชุฎุฏู
 */
async function sendMessage(recipientId, messageText, pageAccessToken) {
  const url = `https://graph.facebook.com/v19.0/me/messages?access_token=${pageAccessToken}`;
  
  const payload = {
    recipient: { id: recipientId },
    message: { text: messageText }
  };

  try {
    const response = await fetch(url, {
      method: "POST",
      headers: { 
        "Content-Type": "application/json" 
      },
      body: JSON.stringify(payload),
    });

    if (response.ok) {
      console.log("โ ุชู ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุจูุฌุงุญ");
    } else {
      const errorData = await response.text();
      console.error("โ ูุดู ุฅุฑุณุงู ุงูุฑุณุงูุฉ:", response.status, errorData);
    }
    
  } catch (error) {
    console.error("โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฑุณุงูุฉ:", error);
  }
}

/**
 * ุชูููุฏ ุงูุฑุฏ ุงูุฐูู - ูุณุฎุฉ ูุจุณุทุฉ
 */
async function generateResponse(userMsg) {
  const msg = userMsg.toLowerCase().trim();
  
  // ูุงุนุฏุฉ ูุนุฑูุฉ ูุจุณุทุฉ
  const responses = {
    // ุงูุชุญูุงุช
    'ูุฑุญุจุง': 'ูุฑุญุจุงู ุจู! ููู ูููููู ูุณุงุนุฏุชูุ',
    'ุงูุณูุงู ุนูููู': 'ูุนูููู ุงูุณูุงู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชู',
    'ุฃููุง': 'ุฃููุงู ูุณููุงู! ุงุณุฃููู ุนู ุฃู ุดูุก',
    
    // ุฃุณุฆูุฉ ุนุงูุฉ
    'ูู ุฃูุช': 'ุฃูุง ูุณุงุนุฏ ุฐูู ูุจุฑูุฌ ููุณุงุนุฏุชู ูุงูุฅุฌุงุจุฉ ุนูู ุฃุณุฆูุชู',
    'ููู ุญุงูู': 'ุจุฎูุฑ ูุงูุญูุฏ ูููุ ููู ูููููู ูุณุงุนุฏุชูุ',
    
    // ูุนูููุงุช ุฃุณุงุณูุฉ
    'ุนุงุตูุฉ ูุตุฑ': 'ุนุงุตูุฉ ูุตุฑ ูู ุงููุงูุฑุฉ',
    'ุนุงุตูุฉ ุงูุณุนูุฏูุฉ': 'ุนุงุตูุฉ ุงูุณุนูุฏูุฉ ูู ุงูุฑูุงุถ',
    'ุนุงุตูุฉ ุงูุฅูุงุฑุงุช': 'ุนุงุตูุฉ ุงูุฅูุงุฑุงุช ูู ุฃุจู ุธุจู',
    
    // ุนููู
    'ูุง ูู ุงูุฌุงุฐุจูุฉ': 'ุงูุฌุงุฐุจูุฉ ูู ููุฉ ุฌุฐุจ ุจูู ุงูุฃุฌุณุงู ุงูุชู ููุง ูุชูุฉ',
    'ูู ูู ูููุชู': 'ุฅุณุญุงู ูููุชู ุนุงูู ุฅูุฌููุฒูุ ูุถุน ููุงููู ุงูุญุฑูุฉ ูุงูุฌุงุฐุจูุฉ',
    
    // ุฑูุงุถุฉ
    'ูู ูุงุฒ ุจูุฃุณ ุงูุนุงูู 2022': 'ุงูุฃุฑุฌูุชูู ูุงุฒุช ุจูุฃุณ ุงูุนุงูู 2022 ูู ูุทุฑ',
    'ูู ูู ูุญูุฏ ุตูุงุญ': 'ูุญูุฏ ุตูุงุญ ูุงุนุจ ูุตุฑู ูู ูููุฑุจูู',
  };

  // ุงูุจุญุซ ุนู ุฑุฏ ูุทุงุจู
  for (const [pattern, response] of Object.entries(responses)) {
    if (msg.includes(pattern)) {
      return response;
    }
  }

  // ุงูุจุญุซ ุงููุชูุฏู ุจุงููููุงุช ุงูููุชุงุญูุฉ
  const advancedResponse = getAdvancedResponse(msg);
  if (advancedResponse) {
    return advancedResponse;
  }

  // ุงูุฑุฏ ุงูุงูุชุฑุงุถู
  return 'ุดูุฑุงู ูู ุนูู ุณุคุงูู. ุฃุญุงูู ููู ูุง ุชุฑูุฏุ ูู ููููู ุฅุนุงุฏุฉ ุตูุงุบุฉ ุงูุณุคุงูุ';
}

/**
 * ุงูุจุญุซ ุงููุชูุฏู ุจุงููููุงุช ุงูููุชุงุญูุฉ
 */
function getAdvancedResponse(msg) {
  // ูููุงุช ููุชุงุญูุฉ ููุนูุงุตู
  if (msg.includes('ุนุงุตูุฉ') || msg.includes('ุนุงุตูู')) {
    const countries = {
      'ูุฑูุณุง': 'ุจุงุฑูุณ',
      'ุฃููุงููุง': 'ุจุฑููู', 
      'ุฅูุทุงููุง': 'ุฑููุง',
      'ุงููุงุจุงู': 'ุทูููู',
      'ุงูุตูู': 'ุจููู',
      'ุฃูุฑููุง': 'ูุงุดูุทู',
      'ููุฏุง': 'ุฃูุชุงูุง',
      'ุฃุณุชุฑุงููุง': 'ูุงูุจุฑุง'
    };
    
    for (const [country, capital] of Object.entries(countries)) {
      if (msg.includes(country)) {
        return `ุนุงุตูุฉ ${country} ูู ${capital}`;
      }
    }
    return 'ูู ูุถูู ุงุฐูุฑ ุงุณู ุงูุฏููุฉ ุงูุชู ุชุฑูุฏ ูุนุฑูุฉ ุนุงุตูุชูุง';
  }

  // ูุนูููุงุช ุนูููุฉ
  if (msg.includes('ูุง ูู') || msg.includes('ูุง ูู')) {
    const science = {
      'ุงูุฐูุงุก ุงูุงุตุทูุงุนู': 'ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูู ุชูููุฉ ุชููู ุงูุญุงุณูุจ ูู ูุญุงูุงุฉ ุงูุชูููุฑ ุงูุจุดุฑู',
      'ุงูุงูุชุฑูุช': 'ุงูุฅูุชุฑูุช ูู ุดุจูุฉ ุนุงูููุฉ ุชุฑุจุท ุฃุฌูุฒุฉ ุงูุญุงุณูุจ ุญูู ุงูุนุงูู',
      'ุงูุจุฑูุฌุฉ': 'ุงูุจุฑูุฌุฉ ูู ูุชุงุจุฉ ุชุนูููุงุช ููุญุงุณูุจ ูุชูููุฐ ููุงู ูุญุฏุฏุฉ'
    };
    
    for (const [term, definition] of Object.entries(science)) {
      if (msg.includes(term)) {
        return definition;
      }
    }
  }

  // ุฃุณุฆูุฉ ุงูููุช
  if (msg.includes('ูุชู')) {
    if (msg.includes('ุฑูุถุงู')) {
      return 'ุฑูุถุงู ูุฃุชู ูู ุงูุดูุฑ ุงูุชุงุณุน ูู ุงูุชูููู ุงููุฌุฑูุ ูููุนุฏู ูุชุบูุฑ ูู ุนุงู';
    }
  }

  return null;
}
